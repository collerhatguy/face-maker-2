{"version":3,"sources":["components/Head.js","components/ColorInput.js","components/SizeInput.js","components/Form.js","reducer.js","App.js","index.js"],"names":["Head","face","style","head","class","hair","brows","eyes","iris","className","nose","mouth","ears","ColorInput","bodyPart","changeColor","for","type","id","name","onChange","e","target","value","SizeInput","changeHeight","changeWidth","Form","dispatch","ACTIONS","changePart","action","payload","setHairColor","setHairWidth","setHairHeight","setHeadColor","setHeadWidth","setHeadHeight","setEyeColor","setEyeWidth","setEyeHeight","setNoseColor","setNoseWidth","setNoseHeight","setEars","setMouth","reducer","state","backgroundColor","width","height","borderColor","App","useReducer","useEffect","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee4e7484.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Head({face}) {\n    return (\n        <div\n            style={face.head} \n            class=\"head\">\n            <div\n                style={face.hair} \n                class=\"hair\">\n                <div \n                    style={face.hair} \n                    class=\"hair-corner\"></div>\n            </div>\n            <div \n                style={face.brows} \n                class=\"brows\">\n                <div class=\"brow\"></div>\n                <div class=\"brow\"></div>\n            </div>\n            <div \n                class=\"eyes\">\n                <div \n                    style={face.eyes}\n                    class=\"eye\">\n                    <div \n                        style={face.eyes.iris}\n                        className=\"iris\"></div>\n                    <div className=\"pupil\"></div>\n                </div>\n                <div \n                    style={face.eyes}\n                    class=\"eye\">\n                    <div \n                        style={face.eyes.iris}\n                        className=\"iris\">\n                    </div>\n                    <div className=\"pupil\"></div>\n                </div>\n            </div>\n            <div \n                style={face.nose}\n                class=\"nose\"></div>\n            <div \n                style={face.mouth}\n                class=\"mouth\"></div>\n            <div \n                style={face.ears}\n                class=\"ears\">\n                <div class=\"ear\"></div>\n                <div class=\"ear\"></div>\n            </div>\n      </div>\n    )\n}\n","import React from 'react'\n\nexport default function ColorInput({bodyPart, changeColor}) {\n    return (\n        <div>\n            <label for={`${bodyPart}color`}>Color: </label>\n            <input \n                type=\"color\"\n                id={`${bodyPart}color`}\n                name={`${bodyPart}color`}\n                onChange={e => {changeColor(e.target.value)}}\n            />\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SizeInput({bodyPart, changeHeight, changeWidth}) {\n    return (\n        <div>\n            <div>\n                <label for={`${bodyPart}width`}>Width:\n                    <input \n                        type=\"number\"\n                        id={`${bodyPart}width`}\n                        name={`${bodyPart}width`}\n                        onChange={e => {changeWidth(`${e.target.value}px`)}}\n                    />\n                    px\n                </label>\n            </div>\n            <div>\n                <label for={`${bodyPart}height`}>Height:\n                    <input \n                        type=\"number\"\n                        id={`${bodyPart}height`}\n                        name={`${bodyPart}height`}\n                        onChange={e => {changeHeight(`${e.target.value}px`)}}\n                    />\n                    px\n                </label>\n            </div>\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport ColorInput from './ColorInput'\nimport SizeInput from \"./SizeInput\";\n\nexport default function Form({dispatch, ACTIONS}) {\n    const changePart = (value, action) => {\n        dispatch({\n            type: action, \n            payload: {\n                value: value\n            }\n        })\n    }\n    return (\n        <form>\n            <feildset>\n                <legend>Hair</legend>\n                <ColorInput \n                    bodyPart=\"hair\" \n                    changeColor={(value) => changePart(value, ACTIONS.setHairColor)} \n                />\n                <SizeInput \n                    bodyPart=\"hair\"\n                    changeWidth={(value) => changePart(value, ACTIONS.setHairWidth)} \n                    changeHeight={(value) => changePart(value, ACTIONS.setHairHeight)}\n                /> \n            </feildset>\n            <feildset>\n                <legend>Head</legend>\n                <ColorInput \n                    bodyPart=\"head\"  \n                    changeColor={(value) => changePart(value, ACTIONS.setHeadColor)}\n                />\n                <SizeInput \n                    bodyPart=\"head\"\n                    changeWidth={(value) => changePart(value, ACTIONS.setHeadWidth)} \n                    changeHeight={(value) => changePart(value, ACTIONS.setHeadHeight)}\n                /> \n            </feildset>\n            <feildset>\n                <legend>Eyes</legend>\n                <ColorInput \n                    bodyPart=\"eyes\"  \n                    changeColor={(value) => changePart(value, ACTIONS.setEyeColor)}\n                />\n                <SizeInput \n                    bodyPart=\"eyes\"\n                    changeWidth={(value) => changePart(value, ACTIONS.setEyeWidth)} \n                    changeHeight={(value) => changePart(value, ACTIONS.setEyeHeight)}\n                /> \n            </feildset>\n            <feildset>\n                <legend>Nose</legend>\n                <ColorInput \n                    bodyPart=\"nose\"  \n                    changeColor={(value) => changePart(value, ACTIONS.setNoseColor)}\n                />\n                <SizeInput \n                    bodyPart=\"nose\"\n                    changeWidth={(value) => changePart(value, ACTIONS.setNoseWidth)} \n                    changeHeight={(value) => changePart(value, ACTIONS.setNoseHeight)}\n                /> \n            </feildset>\n            <feildset>\n                <legend>Mouth</legend>\n            </feildset>\n            <feildset>\n                <legend>Ears</legend>\n            </feildset>\n        </form>\n    )\n}\n","\nconst ACTIONS = {\n    setHairColor: \"set-hair-color\",\n    setHairWidth: \"set-hair-width\",\n    setHairHeight: \"set-hair-height\",\n    setHeadColor: \"set-head-color\",\n    setHeadWidth: \"set-head-width\",\n    setHeadHeight: \"set-head-height\",\n    setEyeColor: \"set-eye-color\",\n    setEyeWidth: \"set-eye-width\",\n    setEyeHeight: \"set-eye-height\",\n    setNoseColor: \"set-nose-color\",\n    setNoseWidth: \"set-nose-width\",\n    setNoseHeight: \"set-nose-height\",\n    setEars: \"set-eyes\",\n    setMouth: \"set-mouth\",\n    setEars: \"set-ears\",\n} \nexport default function reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.setHairColor:\n            return {\n                ...state,\n                hair: {\n                    ...state.hair,\n                    backgroundColor: action.payload.value\n                }\n            }\n        case ACTIONS.setHairWidth:\n            return {\n                ...state,\n                hair: {\n                    ...state.hair,\n                    width: action.payload.value\n                }\n            }\n        case ACTIONS.setHairHeight:\n            return {\n                ...state,\n                hair: {\n                    ...state.hair,\n                    height: action.payload.value\n                }\n            }\n        case ACTIONS.setHeadColor:\n            return {\n                ...state,\n                head: {\n                    ...state.head,\n                    backgroundColor: action.payload.value\n                }\n            }\n        case ACTIONS.setHeadHeight:\n            return {\n                ...state,\n                head: {\n                    ...state.head,\n                    height: action.payload.value\n                }\n            }\n        case ACTIONS.setHeadWidth:\n            return {\n                ...state,\n                head: {\n                    ...state.head,\n                    width: action.payload.value\n                }\n            }\n        case ACTIONS.setEyeColor:\n            return {\n                ...state,\n                eyes: {\n                    ...state.eyes,\n                    iris: {\n                        backgroundColor: action.payload.value,\n                    }\n                }\n            }\n        case ACTIONS.setEyeWidth:\n            return {\n                ...state,\n                eyes: {\n                    ...state.eyes,\n                    width: action.payload.value,\n                }\n            }\n        case ACTIONS.setEyeHeight:\n            return {\n                ...state,\n                eyes: {\n                    ...state.eyes,\n                    height: action.payload.value,\n                }\n            }\n        case ACTIONS.setNoseColor:\n            return {\n                ...state,\n                nose: {\n                    ...state.nose,\n                    borderColor: action.payload.value,\n                }\n            }\n        case ACTIONS.setNoseWidth:\n            return {\n                ...state,\n                nose: {\n                    ...state.nose,\n                    width: action.payload.value,\n                }\n            }\n        case ACTIONS.setNoseHeight:\n            return {\n                ...state,\n                nose: {\n                    ...state.nose,\n                    height: action.payload.value,\n                }\n            }\n        default: return state;\n    }\n}","import React, {useReducer, useEffect} from \"react\";\n\nimport './styles/App.css';\nimport Head from \"./components/Head\";\nimport Form from \"./components/Form\";\nimport reducer from \"./reducer\";\n\nconst ACTIONS = {\n    setHairColor: \"set-hair-color\",\n    setHairWidth: \"set-hair-width\",\n    setHairHeight: \"set-hair-height\",\n    setHeadColor: \"set-head-color\",\n    setHeadWidth: \"set-head-width\",\n    setHeadHeight: \"set-head-height\",\n    setEyeColor: \"set-eye-color\",\n    setEyeWidth: \"set-eye-width\",\n    setEyeHeight: \"set-eye-height\",\n    setNoseColor: \"set-nose-color\",\n    setNoseWidth: \"set-nose-width\",\n    setNoseHeight: \"set-nose-height\",\n    setEars: \"set-eyes\",\n    setMouth: \"set-mouth\",\n    setEars: \"set-ears\",\n  } \n\nfunction App() {\n  const intialState = {\n    hair: {},\n    head: {},\n    brows: {},\n    eyes: {},\n    ears: {},\n    nose: {},\n    mouth: {},\n  }\n  const [face, dispatch] = useReducer(reducer, intialState);\n  \n  useEffect(() => {\n      console.log(face);\n  }, [face]);\n  return (\n    <div className=\"App\">\n      <Head face={face} />\n      <Form dispatch={dispatch} ACTIONS={ACTIONS} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}